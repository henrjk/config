#!/bin/bash

#!/usr/bin/env bash
# Inspired by https://medium.com/@vCabbage/go-installing-multiple-go-versions-from-source-db5573067c

# compare to recommended method using `alias go="go1.13.15"` for example:
# see https://stackoverflow.com/a/68087898

set -e # exit on error
set -x

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

targz=
if [[ $(uname) = 'Darwin' ]]; then
  machine=$(uname -m)
  case $machine in
  x86_64)
    targz=darwin-amd64.tar.gz
    ;;
  arm64)
    targz=darwin-arm64.tar.gz
    ;;
  esac
fi
if [ -z "$targz" ]; then
    echo "TODO: figure out the right file on dl.google.com/go for this platform" >&2
    exit 1
fi

usage_and_exit() {
cat << USAGE >&2
Usage example: $0 <version>

Example: $0 1.13.5
File https://dl.google.com/go/go<version>.${targz} must exist.

See https://golang.org/dl/ for versions that can be downloaded.
See alsp https://unix.stackexchange.com/questions/335801/bash-remembers-wrong-path-to-an-executable-that-was-moved-deleted
in case go version shows an old version.
USAGE
exit 1
}

GO_VERSION=$1

if [ -z "$GO_VERSION" ]; then
    echo "ERROR: missing go version number"
    usage_and_exit
fi

shift
if [ "$#" -gt 0 ]; then
    echo "ERROR: extra parameters not recognized."
    usage_and_exit
fi
cd ~/Downloads/
echo "Downloading https://dl.google.com/go/go$GO_VERSION.${targz} to ~/Downloads"
curl -LO https://dl.google.com/go/go$GO_VERSION.${targz}
mkdir -p "$HOME/goversions/go$GO_VERSION"
tar -C "$HOME/goversions/go$GO_VERSION/" -xzf "go$GO_VERSION.${targz}"
echo "Unpacked to ~/goversions/go$GO_VERSION/"


cat << INFO
To use go GO_VERSION:
  source ~/env/go${GO_VERSION}.env
which contains:
INFO

cd "$SCRIPT_DIR"
cat << ENV_FILE | tee "go${GO_VERSION}.env"
# To source in shell
GOROOT=${HOME}/goversions/go${GO_VERSION}/go
export PATH=\${GOROOT}/bin:\$PATH
export PATH=\$(go env GOPATH)/bin:\$PATH
# Alternative in direnv's .envrc file do the following
GOROOT=${HOME}/goversions/go${GO_VERSION}/go
PATH_add \"\$(go env GOPATH)/bin"
ENV_FILE

cat << INFO
  source ~/env/go${GO_VERSION}.env
which contains:
INFO

echo "Done."
