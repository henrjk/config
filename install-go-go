#!/bin/bash

#
# This script requires having already a global go version installed!
#
# Inspired by recommended method using `alias go="go1.13.15"` for example:
# see https://stackoverflow.com/a/68087898
# I believe direnv does not supports alias however

set -e # exit on error

usage_and_exit() {
cat << USAGE >&2
Usage example: $0 <version>

Example: $0 1.13.5
File https://dl.google.com/go/go<version> must be listed.

See https://golang.org/dl/ for versions that can be downloaded.
USAGE
exit 1
}

GO_VERSION=$1

if [ -z "$GO_VERSION" ]; then
    echo "ERROR: missing go version number"
    usage_and_exit
fi

shift
if [ "$#" -gt 0 ]; then
    echo "ERROR: extra parameters not recognized."
    usage_and_exit
fi

if ! which go; then
  echo "This script requires having already a global go version installed!"
  echo "Use install-go-global so that zsh/sourced/go.zsh content makes sense for sures"
  exit 2
fi

# This was implemented with go 1.13
# go get "golang.org/dl/go$GO_VERSION"
# "$(go env GOPATH)/bin/go$GO_VERSION" download  # goes to ~/sdk/go$GO_VERSION

go install "golang.org/dl/go$GO_VERSION@latest"
"go$GO_VERSION" download
# "$(go env GOPATH)/bin/go$GO_VERSION" download  # goes to ~/sdk/go$GO_VERSION , bin at ~/go/bin/go$GO_VERSION


echo "Create the matching direnv .envrc snippet with:"
echo ./envrc-go-go "$GO_VERSION"
